version: '3.6'
services:
  
  ## Overview
  ## We won't be using volumes for the `code`, they'll be included in the images that we run.
  ## No tty
  ## Database will serve all services, and a setup.sql will be added to config/ for each service should it require one
  ## We'll use secrets instead of the .env to assign variables
  ## entrypoint for php services will be a script that fetches the secrets and exports them to the ENV on startup
  ## Other resources will be fetched in config/fetch_sources.sh to be shared in the files volume

 
  # Small image that fetches the git repositories we need into a shared volume, then exits
  files:
    image: alpine/git
    entrypoint: /fetch_sources.sh
    volumes:
      - files:/git/sources
      - ./config/fetch_sources.sh:/fetch_sources.sh

  # Node-only services. Ports listen on 2304 internally, and are remapped for nginx
  blog:
    image: fishnet/blog
    working_dir: /var/www
    ports: 
      - 2305:2304
    networks:
      - appnet

  # These are our php services, they run and listen on port 9000 internally, remapped on the outside so nginx can invoke the correct one. Instead of a .env file, it uses the secrets system of docker
  click:
    image: fishnet/click
    entrypoint: /php_config.sh
    working_dir: /var/www
    ports:
      - 9001:9000
    volumes:
      - click:/var/www
      - ./config/php_config.sh:/php_config.sh
    networks:
      - appnet
    secrets:
      - db_username
      - db_password
    depends_on:
      - db

  danger:
    image: fishnet/danger
    entrypoint: /php_config.sh
    working_dir: /var/www
    ports:
      - 9002:9000
    volumes:
      - danger:/var/www
      - ./config/php_config.sh:/php_config.sh
    networks:
      - appnet
    secrets:
      - db_username
      - db_password
    depends_on:
      - db

  glitch:
    image: fishnet/glitch
    entrypoint: /php_config.sh
    working_dir: /var/www
    ports:
      - 9003:9000
    volumes:
      - glitch:/var/www
      - ./config/php_config.sh:/php_config.sh
    networks:
      - appnet
    depends_on:
      - db

  online:
    image: fishnet/online
    entrypoint: 
      - /php_config.sh
    working_dir: /var/www/forum
    ports:
      - 9004:9000
    volumes:
      - online:/var/www/forum
      - ./config/php_config.sh:/php_config.sh
    networks:
      - appnet
    secrets:
      - db_username
      - db_password
    environment:
        SITE_NAME: forums
        SITE_LANGUAGE: english
        # TODO: We assume wetfish.net
        SITE_URL: http://halfwit.wetfish.net/forum
        DB_DATABASE: forums
        MAINTENANCE_MODE: 0
        OUTGOING_EMAIL: noreply@yourdomain.com
    depends_on:
      - db

  wiki:
    image: fishnet/wiki
    entrypoint: /php_config.sh
    working_dir: /var/www
    ports:
      - 9005:9000
    volumes:
      - wiki:/var/www
      - ./config/php_config.sh:/php_config.sh
    networks:
      - appnet
    secrets:
      - db_username
      - db_password
    depends_on:
      - db

  #webserver:
  #  image: ghcr.io/linuxserver/swag
  #  container_name: swag
  #  restart: unless-stopped
  #  environment:
  #    PUID: 1000
  #    PGID: 1000
  #    TZ: $TIMEZONE
  #    URL: $SITE_URL
  #    SUBDOMAINS: $SUBDOMAINS
  #    ONLY_SUBDOMAINS: $ONLY_SUBDOMAINS
  #    VALIDATION: http
  #    EMAIL: $EMAIL # optional
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  volumes:
  #    - ./config/site-confs:/config/nginx/site-confs
  #    - ./config/fastcgi_params:/config/nginx/fastcgi_params
  #    - click:/var/www/click
  #    - danger:/var/www/danger
  #    - glitch:/var/www/glitch
  #    - files:/var/www/static
  #    - online:/var/www/online
  #    - wiki:/var/www/wiki
  #  networks:
  #    - app-network
  #  depends_on:
  #    - db

  # MySQL Service
  db:
    image: mysql:5.7.22
    ports:
      - "3306:3306"
    environment:
      MYSQL_USERNAME_FILE: /run/secrets/db_username
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - appnet
    secrets:
      - db_username
      - db_password

networks:
  appnet:
    name: appnet
    attachable: true

secrets:
  db_username:
    external: true
  db_password:
    external: true

volumes:
    dbdata:
      driver: local
    click:
      driver: local
    danger:
      driver: local
    glitch:
      driver: local
    files:
      driver: local
    online:
      driver: local
    wiki:
      driver: local
