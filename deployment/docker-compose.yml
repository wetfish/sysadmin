version: '3.6'
services:
  
  ## Overview
  ## We won't be using volumes for the `code`, they'll be included in the images that we run.
  ## No tty
  ## Database will serve all services, and a setup.sql will be added to config/ for each service should it require one
  ## We'll use secrets instead of the .env to assign variables
  ## entrypoint for php services will be a script that fetches the secrets and exports them to the ENV on startup
  ## Other resources will be fetched in config/fetch_sources.sh to be shared in the files volume

 
  # Small image that fetches the git repositories we need into a shared volume, then exits
  files:
    image: alpine/git
    entrypoint: /fetch_sources.sh
    volumes:
      - files:/git/sources
      - ./config/fetch_sources.sh:/fetch_sources.sh

  # Node-only services. Ports listen on 2304 internally, and are remapped for nginx
  blog:
    image: fishnet/blog
    working_dir: /var/www/blog
    networks:
      - appnet

  # These are our php services, they run and listen on port 9000 internally, remapped on the outside so nginx can invoke the correct one. Instead of a .env file, it uses the secrets system of docker
  click:
    image: fishnet/click
    working_dir: /var/www/click
    volumes:
      - click:/var/www/click
      - ./config/click/php.ini:/usr/local/etc/php/conf.d/settings.ini
    env_file:
      - ./.env
    environment:
      DB_DATABASE: click
    networks:
      - appnet
    depends_on:
      - db

  danger:
    image: fishnet/danger
    working_dir: /var/www/danger
    volumes:
      - danger:/var/www/danger
    env_file:
      - ./.env
    networks:
      - appnet
    environment:
      DB_DATABASE: danger
      SITE_URL: bro.majorleague.website
    depends_on:
      - db

  glitch:
    image: fishnet/glitch
    working_dir: /var/www
    volumes:
      - glitch:/var/www
    env_file:
      - ./.env
    networks:
      - appnet

  wiki:
    image: fishnet/wiki
    working_dir: /var/www
    environment:
      DB_DATABASE: wiki
      SITE_URL: story.majorleague.website # DO NOT LET ME COMMIT THIS TO THE FINAL PR
    volumes:
      - wiki:/var/www
      - ./config/wiki/config.php:/var/www/src/config.php
      - ./config/wiki/php.ini:/usr/local/etc/php/conf.d/settings.ini
    env_file:
      - ./.env
    networks:
      - appnet
    depends_on:
      - db

  #webserver:
  #  image: ghcr.io/linuxserver/swag
  #  container_name: swag
  #  restart: unless-stopped
  #  environment:
  #    PUID: 1000
  #    PGID: 1000
  #    TZ: $TIMEZONE
  #    URL: $SITE_URL
  #    SUBDOMAINS: $SUBDOMAINS
  #    ONLY_SUBDOMAINS: $ONLY_SUBDOMAINS
  #    VALIDATION: http
  #    EMAIL: $EMAIL # optional
  #  ports:
  #    - "80:80"
  #    - "443:443"
  #  volumes:
  #    - ./config/site-confs:/config/nginx/site-confs
  #    - ./config/fastcgi_params:/config/nginx/fastcgi_params
  #    - click:/var/www/click
  #    - danger:/var/www/danger
  #    - glitch:/var/www/glitch
  #    - files:/var/www/static
  #    - online:/var/www/online
  #    - wiki:/var/www/wiki
  #  networks:
  #    - app-network
  #  depends_on:
  #    - db

  # Temporary nginx config
  webserver:
    image: nginx:alpine
    ports:
      - "80:80"
    networks: 
      - appnet
    volumes:
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - click:/var/www/click
      - danger:/var/www/danger
      - glitch:/var/www/glitch
      - files:/var/www/static
      - wiki:/var/www/wiki
    depends_on:
      - blog
      - click
      - danger
      - glitch
      - wiki

  # MySQL Service
  db:
    image: mariadb 
    command: --sql-mode=""
    environment:
      MYSQL_ROOT_PASSWORD: $DB_PASSWORD
      MYSQL_USER: $DB_USERNAME
      MYSQL_PASSWORD: $DB_PASSWORD
      MYSQL_DATABASE: root
    volumes:
      - ./config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - dbdata:/var/lib/mysql
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
    dbdata:
      driver: local
    click:
      driver: local
    danger:
      driver: local
    glitch:
      driver: local
    files:
      driver: local
    wiki:
      driver: local
